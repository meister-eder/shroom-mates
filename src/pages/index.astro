---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import AboutUsSection from "../components/AboutUsSection.astro";
import ImageGallery from "../components/ImageGallery.astro";
import UpcomingDates from "../components/UpcomingDates.astro";
import CustomerDeliverySection from "../components/CustomerDeliverySection.astro";
import ValuesSection from "../components/ValuesSection.astro";

const title = "Hi, wir sind die shroom-mates!";
const description =
  "Hochwertige Edelpilze aus Leipzig, Plagwitz. Frisch kultiviert und nachhaltig angebaut von den shroom-mates.";
---

<Layout title={title} description={description} isLandingPage={true}>
  <main class="landing-main">
    <section class="hero">
      <img
        src="/assets/hero_rose_tasse.jpg"
        alt="Rosafarbene Austernpilze in einer Tasse"
        class="hero-image"
        loading="eager"
      />
      <a href="#content" class="scroll-arrow" aria-label="Scroll down">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="40"
          height="40"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <polyline points="6 9 12 15 18 9"></polyline>
        </svg>
      </a>
    </section>

    <section class="hero-teaser" id="content">
      <div class="teaser-wrapper">
        <h1 class="hero-title">
          Hi, wir sind die <span class="no-wrap">shroom-mates!</span>
        </h1>
        <div class="teaser-content-row">
          <img
            src="/assets/logo_with_shrooms.png"
            alt="Shroom-Mates Logo mit Pilzen"
            class="walking-logo"
            width="200"
            height="200"
            loading="eager"
          />
          <p class="teaser-text">
            Wir z√ºchten feinste Edelpilze mit regionalen Rohstoffen, direkt in
            der Plagwitzer Markthalle in Leipzig.
          </p>
        </div>
      </div>
    </section>

    <!-- New sections -->
    <ValuesSection />
    <AboutUsSection />
    <ImageGallery />
    <UpcomingDates />
    <CustomerDeliverySection />
  </main>
</Layout>

<style>
  .landing-main {
    max-width: 100vw;
    padding: 0;
    margin: 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
    width: 100%;
    box-sizing: border-box;
  }

  /* Ensure sections flow properly */
  .landing-main > :global(section) {
    width: 100%;
    max-width: 100vw;
    box-sizing: border-box;
    overflow-x: hidden;
  }

  .hero {
    width: 100%;
    height: 100vh;
    position: relative;
    margin: 0;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    border-bottom: 2px solid #000;
  }

  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top 30%;
    transform: scale(1.1);
    position: absolute;
    top: 0;
    left: 0;
  }

  .scroll-arrow {
    position: absolute;
    bottom: 8rem;
    left: 50%;
    transform: translateX(-50%);
    z-index: 10;
    color: #ffffff;
    cursor: pointer;
    animation: bounce 2s infinite;
    transition: opacity 0.3s ease;
    text-decoration: none;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
  }

  .scroll-arrow:hover {
    opacity: 0.7;
  }

  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-10px);
    }
    60% {
      transform: translateX(-50%) translateY(-5px);
    }
  }

  .hero-teaser {
    width: 100%;
    background: var(--bg-color);
    padding: 2rem 1rem;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    min-height: auto;
    max-height: none;
    position: relative;
    scroll-margin-top: var(
      --navbar-height
    ); /* offset for fixed navbar when scrolling to anchor */
  }

  .teaser-wrapper {
    max-width: 1200px;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    position: relative;
  }

  .hero-title {
    font-size: 2.5rem;
    color: var(--text-color);
    margin: 0;
    line-height: 1.2;
    text-align: center;
    width: 100%;
    font-family: monospace;
    font-weight: bold;
  }

  .teaser-content-row {
    display: flex;
    align-items: center;
    gap: 3rem;
    position: relative;
    width: 100%;
  }

  .walking-logo {
    width: 200px;
    height: auto;
    flex-shrink: 0;
    position: relative;
    bottom: -2rem;
    z-index: 20;
  }

  .teaser-text {
    font-size: 1.2rem;
    line-height: 1.6;
    color: var(--text-color);
    margin: 0;
    flex: 1;
    text-align: left;
  }

  .no-wrap {
    white-space: nowrap;
  }

  @media (max-width: 768px) {
    .hero {
      height: 100vh;
    }

    .scroll-arrow {
      bottom: 2rem;
    }

    .teaser-wrapper {
      gap: 1rem;
    }

    .hero-title {
      font-size: 1.6rem;
      text-align: center;
    }

    .teaser-content-row {
      gap: 1.5rem;
    }

    .walking-logo {
      width: 120px;
      bottom: -1rem;
    }

    .teaser-text {
      font-size: 1rem;
      line-height: 1.4;
      text-align: left;
    }
  }

  @media (max-width: 480px) {
    .walking-logo {
      width: 80px;
      bottom: -0.5rem;
    }

    .teaser-content-row {
      gap: 1rem;
    }

    .teaser-text {
      font-size: 0.9rem;
      line-height: 1.3;
    }
  }
</style>

<script>
  // Smooth scroll with navbar offset
  document.addEventListener("DOMContentLoaded", () => {
    const scrollArrow = document.querySelector(".scroll-arrow");
    if (scrollArrow) {
      scrollArrow.addEventListener("click", (e) => {
        e.preventDefault();
        const target = document.querySelector("#content");
        if (target) {
          // Get navbar height from CSS variable
          const navbarHeight =
            parseFloat(
              getComputedStyle(document.documentElement).getPropertyValue(
                "--navbar-height"
              )
            ) * 16; // Convert rem to pixels (assuming 1rem = 16px)

          const targetPosition =
            target.getBoundingClientRect().top +
            window.pageYOffset -
            navbarHeight;
          window.scrollTo({
            top: targetPosition,
            behavior: "smooth",
          });
        }
      });
    }
  });
</script>
